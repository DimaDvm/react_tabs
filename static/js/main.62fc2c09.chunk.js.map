{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelect","selectedTabId","currentTab","find","tab","id","className","map","classNames","title","href","onClick","handleTabClick","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAA0C,IAAD,EAAvCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACnDC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAQtE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACE,UAAQ,MACRE,UAAWE,IACT,CACE,YAAaJ,EAAIK,QAAUP,EAAWO,QAJ5C,SAQE,mBACEC,KAAMN,EAAIC,GACV,UAAQ,UACRM,QAAS,YAtBA,SAACP,GAClBA,EAAIC,KAAOH,EAAWG,IACxBL,EAAYI,GAqBAQ,CAAeR,IAJnB,SAOGA,EAAIK,iBAOf,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,mBACGP,EAAKI,MAAK,SAAAC,GAAG,OACZF,EAAWO,QAAUL,EAAIK,gBAF7B,aACG,EAEGI,cCzCCd,EAAO,CAClB,CAAEM,GAAI,QAASI,MAAO,QAASI,QAAS,eACxC,CAAER,GAAI,QAASI,MAAO,QAASI,QAAS,eACxC,CAAER,GAAI,QAASI,MAAO,QAASI,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOiB,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKX,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,UACE,oDACCU,EAAYP,SAGf,cAAC,EAAD,CACEV,KAAMA,EACNC,YAbkB,SAACI,GACvBa,EAAeb,IAaXH,cAAee,EAAYX,SC3BnCa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.62fc2c09.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[];\n  onTabSelect: (tab: Tab) => void;\n  selectedTabId: string;\n}\n\nexport const Tabs: React.FC<Props> = ({ tabs, onTabSelect, selectedTabId }) => {\n  const currentTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleTabClick = (tab: Tab) => {\n    if (tab.id !== currentTab.id) {\n      onTabSelect(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames(\n                {\n                  'is-active': tab.title === currentTab.title,\n                },\n              )}\n            >\n              <a\n                href={tab.id}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  handleTabClick(tab);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => (\n          currentTab.title === tab.title\n        ))?.content}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const handleTabSelect = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        <span>Selected tab is </span>\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelect={handleTabSelect}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}